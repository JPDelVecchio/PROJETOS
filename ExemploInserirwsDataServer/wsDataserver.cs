//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:2.0.50727.5420
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "wsDataServerSoap", Namespace = "http://www.totvs.com.br/br/")]
    public partial class wsDataServer : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback AutenticaAcessoOperationCompleted;

        private System.Threading.SendOrPostCallback AutenticaAcessoAuthOperationCompleted;

        private System.Threading.SendOrPostCallback GetSchemaOperationCompleted;

        private System.Threading.SendOrPostCallback GetSchemaAuthOperationCompleted;

        private System.Threading.SendOrPostCallback ReadViewOperationCompleted;

        private System.Threading.SendOrPostCallback ReadViewAuthOperationCompleted;

        private System.Threading.SendOrPostCallback ReadRecordOperationCompleted;

        private System.Threading.SendOrPostCallback ReadRecordAuthOperationCompleted;

        private System.Threading.SendOrPostCallback SaveRecordOperationCompleted;

        private System.Threading.SendOrPostCallback SaveRecordAuthOperationCompleted;

        /// <remarks/>
        public wsDataServer()
        {
            this.Url = "http://localhost/testetbc/wsDataServer.asmx";
        }

        /// <remarks/>
        public event AutenticaAcessoCompletedEventHandler AutenticaAcessoCompleted;

        /// <remarks/>
        public event AutenticaAcessoAuthCompletedEventHandler AutenticaAcessoAuthCompleted;

        /// <remarks/>
        public event GetSchemaCompletedEventHandler GetSchemaCompleted;

        /// <remarks/>
        public event GetSchemaAuthCompletedEventHandler GetSchemaAuthCompleted;

        /// <remarks/>
        public event ReadViewCompletedEventHandler ReadViewCompleted;

        /// <remarks/>
        public event ReadViewAuthCompletedEventHandler ReadViewAuthCompleted;

        /// <remarks/>
        public event ReadRecordCompletedEventHandler ReadRecordCompleted;

        /// <remarks/>
        public event ReadRecordAuthCompletedEventHandler ReadRecordAuthCompleted;

        /// <remarks/>
        public event SaveRecordCompletedEventHandler SaveRecordCompleted;

        /// <remarks/>
        public event SaveRecordAuthCompletedEventHandler SaveRecordAuthCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.totvs.com.br/br/AutenticaAcesso", RequestNamespace = "http://www.totvs.com.br/br/", ResponseNamespace = "http://www.totvs.com.br/br/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AutenticaAcesso()
        {
            object[] results = this.Invoke("AutenticaAcesso", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAutenticaAcesso(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AutenticaAcesso", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndAutenticaAcesso(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void AutenticaAcessoAsync()
        {
            this.AutenticaAcessoAsync(null);
        }

        /// <remarks/>
        public void AutenticaAcessoAsync(object userState)
        {
            if ((this.AutenticaAcessoOperationCompleted == null))
            {
                this.AutenticaAcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutenticaAcessoOperationCompleted);
            }
            this.InvokeAsync("AutenticaAcesso", new object[0], this.AutenticaAcessoOperationCompleted, userState);
        }

        private void OnAutenticaAcessoOperationCompleted(object arg)
        {
            if ((this.AutenticaAcessoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutenticaAcessoCompleted(this, new AutenticaAcessoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.totvs.com.br/br/AutenticaAcessoAuth", RequestNamespace = "http://www.totvs.com.br/br/", ResponseNamespace = "http://www.totvs.com.br/br/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AutenticaAcessoAuth(string Usuario, string Senha)
        {
            object[] results = this.Invoke("AutenticaAcessoAuth", new object[] {
                        Usuario,
                        Senha});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAutenticaAcessoAuth(string Usuario, string Senha, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AutenticaAcessoAuth", new object[] {
                        Usuario,
                        Senha}, callback, asyncState);
        }

        /// <remarks/>
        public string EndAutenticaAcessoAuth(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void AutenticaAcessoAuthAsync(string Usuario, string Senha)
        {
            this.AutenticaAcessoAuthAsync(Usuario, Senha, null);
        }

        /// <remarks/>
        public void AutenticaAcessoAuthAsync(string Usuario, string Senha, object userState)
        {
            if ((this.AutenticaAcessoAuthOperationCompleted == null))
            {
                this.AutenticaAcessoAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutenticaAcessoAuthOperationCompleted);
            }
            this.InvokeAsync("AutenticaAcessoAuth", new object[] {
                        Usuario,
                        Senha}, this.AutenticaAcessoAuthOperationCompleted, userState);
        }

        private void OnAutenticaAcessoAuthOperationCompleted(object arg)
        {
            if ((this.AutenticaAcessoAuthCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutenticaAcessoAuthCompleted(this, new AutenticaAcessoAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.totvs.com.br/br/GetSchema", RequestNamespace = "http://www.totvs.com.br/br/", ResponseNamespace = "http://www.totvs.com.br/br/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSchema(string DataServerName, string Contexto)
        {
            object[] results = this.Invoke("GetSchema", new object[] {
                        DataServerName,
                        Contexto});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSchema(string DataServerName, string Contexto, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSchema", new object[] {
                        DataServerName,
                        Contexto}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetSchema(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetSchemaAsync(string DataServerName, string Contexto)
        {
            this.GetSchemaAsync(DataServerName, Contexto, null);
        }

        /// <remarks/>
        public void GetSchemaAsync(string DataServerName, string Contexto, object userState)
        {
            if ((this.GetSchemaOperationCompleted == null))
            {
                this.GetSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchemaOperationCompleted);
            }
            this.InvokeAsync("GetSchema", new object[] {
                        DataServerName,
                        Contexto}, this.GetSchemaOperationCompleted, userState);
        }

        private void OnGetSchemaOperationCompleted(object arg)
        {
            if ((this.GetSchemaCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchemaCompleted(this, new GetSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.totvs.com.br/br/GetSchemaAuth", RequestNamespace = "http://www.totvs.com.br/br/", ResponseNamespace = "http://www.totvs.com.br/br/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSchemaAuth(string DataServerName, string Contexto, string Usuario, string Senha)
        {
            object[] results = this.Invoke("GetSchemaAuth", new object[] {
                        DataServerName,
                        Contexto,
                        Usuario,
                        Senha});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSchemaAuth(string DataServerName, string Contexto, string Usuario, string Senha, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSchemaAuth", new object[] {
                        DataServerName,
                        Contexto,
                        Usuario,
                        Senha}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetSchemaAuth(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetSchemaAuthAsync(string DataServerName, string Contexto, string Usuario, string Senha)
        {
            this.GetSchemaAuthAsync(DataServerName, Contexto, Usuario, Senha, null);
        }

        /// <remarks/>
        public void GetSchemaAuthAsync(string DataServerName, string Contexto, string Usuario, string Senha, object userState)
        {
            if ((this.GetSchemaAuthOperationCompleted == null))
            {
                this.GetSchemaAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchemaAuthOperationCompleted);
            }
            this.InvokeAsync("GetSchemaAuth", new object[] {
                        DataServerName,
                        Contexto,
                        Usuario,
                        Senha}, this.GetSchemaAuthOperationCompleted, userState);
        }

        private void OnGetSchemaAuthOperationCompleted(object arg)
        {
            if ((this.GetSchemaAuthCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchemaAuthCompleted(this, new GetSchemaAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.totvs.com.br/br/ReadView", RequestNamespace = "http://www.totvs.com.br/br/", ResponseNamespace = "http://www.totvs.com.br/br/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReadView(string DataServerName, string Filtro, string Contexto)
        {
            object[] results = this.Invoke("ReadView", new object[] {
                        DataServerName,
                        Filtro,
                        Contexto});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginReadView(string DataServerName, string Filtro, string Contexto, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ReadView", new object[] {
                        DataServerName,
                        Filtro,
                        Contexto}, callback, asyncState);
        }

        /// <remarks/>
        public string EndReadView(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ReadViewAsync(string DataServerName, string Filtro, string Contexto)
        {
            this.ReadViewAsync(DataServerName, Filtro, Contexto, null);
        }

        /// <remarks/>
        public void ReadViewAsync(string DataServerName, string Filtro, string Contexto, object userState)
        {
            if ((this.ReadViewOperationCompleted == null))
            {
                this.ReadViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadViewOperationCompleted);
            }
            this.InvokeAsync("ReadView", new object[] {
                        DataServerName,
                        Filtro,
                        Contexto}, this.ReadViewOperationCompleted, userState);
        }

        private void OnReadViewOperationCompleted(object arg)
        {
            if ((this.ReadViewCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadViewCompleted(this, new ReadViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.totvs.com.br/br/ReadViewAuth", RequestNamespace = "http://www.totvs.com.br/br/", ResponseNamespace = "http://www.totvs.com.br/br/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReadViewAuth(string DataServerName, string Filtro, string Contexto, string Usuario, string Senha)
        {
            object[] results = this.Invoke("ReadViewAuth", new object[] {
                        DataServerName,
                        Filtro,
                        Contexto,
                        Usuario,
                        Senha});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginReadViewAuth(string DataServerName, string Filtro, string Contexto, string Usuario, string Senha, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ReadViewAuth", new object[] {
                        DataServerName,
                        Filtro,
                        Contexto,
                        Usuario,
                        Senha}, callback, asyncState);
        }

        /// <remarks/>
        public string EndReadViewAuth(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ReadViewAuthAsync(string DataServerName, string Filtro, string Contexto, string Usuario, string Senha)
        {
            this.ReadViewAuthAsync(DataServerName, Filtro, Contexto, Usuario, Senha, null);
        }

        /// <remarks/>
        public void ReadViewAuthAsync(string DataServerName, string Filtro, string Contexto, string Usuario, string Senha, object userState)
        {
            if ((this.ReadViewAuthOperationCompleted == null))
            {
                this.ReadViewAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadViewAuthOperationCompleted);
            }
            this.InvokeAsync("ReadViewAuth", new object[] {
                        DataServerName,
                        Filtro,
                        Contexto,
                        Usuario,
                        Senha}, this.ReadViewAuthOperationCompleted, userState);
        }

        private void OnReadViewAuthOperationCompleted(object arg)
        {
            if ((this.ReadViewAuthCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadViewAuthCompleted(this, new ReadViewAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.totvs.com.br/br/ReadRecord", RequestNamespace = "http://www.totvs.com.br/br/", ResponseNamespace = "http://www.totvs.com.br/br/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReadRecord(string DataServerName, string PrimaryKey, string Contexto)
        {
            object[] results = this.Invoke("ReadRecord", new object[] {
                        DataServerName,
                        PrimaryKey,
                        Contexto});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginReadRecord(string DataServerName, string PrimaryKey, string Contexto, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ReadRecord", new object[] {
                        DataServerName,
                        PrimaryKey,
                        Contexto}, callback, asyncState);
        }

        /// <remarks/>
        public string EndReadRecord(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ReadRecordAsync(string DataServerName, string PrimaryKey, string Contexto)
        {
            this.ReadRecordAsync(DataServerName, PrimaryKey, Contexto, null);
        }

        /// <remarks/>
        public void ReadRecordAsync(string DataServerName, string PrimaryKey, string Contexto, object userState)
        {
            if ((this.ReadRecordOperationCompleted == null))
            {
                this.ReadRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadRecordOperationCompleted);
            }
            this.InvokeAsync("ReadRecord", new object[] {
                        DataServerName,
                        PrimaryKey,
                        Contexto}, this.ReadRecordOperationCompleted, userState);
        }

        private void OnReadRecordOperationCompleted(object arg)
        {
            if ((this.ReadRecordCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadRecordCompleted(this, new ReadRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.totvs.com.br/br/ReadRecordAuth", RequestNamespace = "http://www.totvs.com.br/br/", ResponseNamespace = "http://www.totvs.com.br/br/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReadRecordAuth(string DataServerName, string PrimaryKey, string Contexto, string Usuario, string Senha)
        {
            object[] results = this.Invoke("ReadRecordAuth", new object[] {
                        DataServerName,
                        PrimaryKey,
                        Contexto,
                        Usuario,
                        Senha});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginReadRecordAuth(string DataServerName, string PrimaryKey, string Contexto, string Usuario, string Senha, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ReadRecordAuth", new object[] {
                        DataServerName,
                        PrimaryKey,
                        Contexto,
                        Usuario,
                        Senha}, callback, asyncState);
        }

        /// <remarks/>
        public string EndReadRecordAuth(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ReadRecordAuthAsync(string DataServerName, string PrimaryKey, string Contexto, string Usuario, string Senha)
        {
            this.ReadRecordAuthAsync(DataServerName, PrimaryKey, Contexto, Usuario, Senha, null);
        }

        /// <remarks/>
        public void ReadRecordAuthAsync(string DataServerName, string PrimaryKey, string Contexto, string Usuario, string Senha, object userState)
        {
            if ((this.ReadRecordAuthOperationCompleted == null))
            {
                this.ReadRecordAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadRecordAuthOperationCompleted);
            }
            this.InvokeAsync("ReadRecordAuth", new object[] {
                        DataServerName,
                        PrimaryKey,
                        Contexto,
                        Usuario,
                        Senha}, this.ReadRecordAuthOperationCompleted, userState);
        }

        private void OnReadRecordAuthOperationCompleted(object arg)
        {
            if ((this.ReadRecordAuthCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadRecordAuthCompleted(this, new ReadRecordAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.totvs.com.br/br/SaveRecord", RequestNamespace = "http://www.totvs.com.br/br/", ResponseNamespace = "http://www.totvs.com.br/br/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveRecord(string DataServerName, string XML, string Contexto)
        {
            object[] results = this.Invoke("SaveRecord", new object[] {
                        DataServerName,
                        XML,
                        Contexto});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSaveRecord(string DataServerName, string XML, string Contexto, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SaveRecord", new object[] {
                        DataServerName,
                        XML,
                        Contexto}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSaveRecord(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SaveRecordAsync(string DataServerName, string XML, string Contexto)
        {
            this.SaveRecordAsync(DataServerName, XML, Contexto, null);
        }

        /// <remarks/>
        public void SaveRecordAsync(string DataServerName, string XML, string Contexto, object userState)
        {
            if ((this.SaveRecordOperationCompleted == null))
            {
                this.SaveRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveRecordOperationCompleted);
            }
            this.InvokeAsync("SaveRecord", new object[] {
                        DataServerName,
                        XML,
                        Contexto}, this.SaveRecordOperationCompleted, userState);
        }

        private void OnSaveRecordOperationCompleted(object arg)
        {
            if ((this.SaveRecordCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveRecordCompleted(this, new SaveRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.totvs.com.br/br/SaveRecordAuth", RequestNamespace = "http://www.totvs.com.br/br/", ResponseNamespace = "http://www.totvs.com.br/br/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveRecordAuth(string DataServerName, string XML, string Contexto, string Usuario, string Senha)
        {
            object[] results = this.Invoke("SaveRecordAuth", new object[] {
                        DataServerName,
                        XML,
                        Contexto,
                        Usuario,
                        Senha});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSaveRecordAuth(string DataServerName, string XML, string Contexto, string Usuario, string Senha, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SaveRecordAuth", new object[] {
                        DataServerName,
                        XML,
                        Contexto,
                        Usuario,
                        Senha}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSaveRecordAuth(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SaveRecordAuthAsync(string DataServerName, string XML, string Contexto, string Usuario, string Senha)
        {
            this.SaveRecordAuthAsync(DataServerName, XML, Contexto, Usuario, Senha, null);
        }

        /// <remarks/>
        public void SaveRecordAuthAsync(string DataServerName, string XML, string Contexto, string Usuario, string Senha, object userState)
        {
            if ((this.SaveRecordAuthOperationCompleted == null))
            {
                this.SaveRecordAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveRecordAuthOperationCompleted);
            }
            this.InvokeAsync("SaveRecordAuth", new object[] {
                        DataServerName,
                        XML,
                        Contexto,
                        Usuario,
                        Senha}, this.SaveRecordAuthOperationCompleted, userState);
        }

        private void OnSaveRecordAuthOperationCompleted(object arg)
        {
            if ((this.SaveRecordAuthCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveRecordAuthCompleted(this, new SaveRecordAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void AutenticaAcessoCompletedEventHandler(object sender, AutenticaAcessoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutenticaAcessoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AutenticaAcessoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void AutenticaAcessoAuthCompletedEventHandler(object sender, AutenticaAcessoAuthCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutenticaAcessoAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AutenticaAcessoAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetSchemaCompletedEventHandler(object sender, GetSchemaCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetSchemaAuthCompletedEventHandler(object sender, GetSchemaAuthCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchemaAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSchemaAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void ReadViewCompletedEventHandler(object sender, ReadViewCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ReadViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void ReadViewAuthCompletedEventHandler(object sender, ReadViewAuthCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadViewAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ReadViewAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void ReadRecordCompletedEventHandler(object sender, ReadRecordCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ReadRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void ReadRecordAuthCompletedEventHandler(object sender, ReadRecordAuthCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadRecordAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ReadRecordAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SaveRecordCompletedEventHandler(object sender, SaveRecordCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SaveRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SaveRecordAuthCompletedEventHandler(object sender, SaveRecordAuthCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveRecordAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SaveRecordAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

